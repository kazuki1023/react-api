# openapiのversion指定
openapi: "3.0.3"

# apiのメタ情報を記述
info:
  title: "Sample API"  #apiのタイトル
  version: "1.0.0"  #apiドキュメントのversion

# apiを提供しているサーバーを設定
servers:
- url: "http://localhost:3000"
  description: "ローカル環境"
- url: "http://sample.com"
  description: "本番環境"

# APIを整理するためのタグ
tags:
  - name: "users"
    description: "ユーザーの操作"
  - name: "posts"
    description: "記事"
  - name: "shops"
    description: "店舗の操作"

# APIとして利用できるパスと操作を定義
# メタデータ/リクエストパラメータ/リクエストボディー/レスポンスの４つで成り立ってる
paths:
  "/api/v1/hello":
    get:
      summary: "hello" #操作の概要
      # description: 操作の詳細
      tags: ["users"]
      deprecated: false #廃止になったかどうかを定義
      responses:
        "200":
          description: "成功"
          content:
            application/json:
              schema:
                type: string
                example: "hello"
  "/users":
    get:
      summary: "ユーザー一覧の取得"
      tags: ["users"]
      deprecated: false
      responses:
        "200":
          description: "成功"
  "/users/{userId}":
    get:
      summary: "ユーザーの取得"
      tags: ["users"]
      deprecated: false
      #リクエストパラメータ
      parameters:
        - name: userId #パラメータ名
          in: path #パラメータの場所を指定(query,header,path,cookie)
          required: true
          schema: { type: string }
      responses:
        "200":
          description: "成功"
  "/posts/{id}":
    put:
      summary: "記事の更新"
      tags: ["posts"]
      deprecated: false
      parameters:
        - name: id
          in: path
          required: true
          schema: { type:string }
          example: "1"
        - name: X-Api-key
          in: header
          required: true
          description: "APIキーをヘッダーに付与"
          schema: { type: string }
          example: "xxx-xxx-xxx-xxx"
        - name: token
          in: cookie
          description: "アクセストークン"
          required: true
          schema: { type: string }
          example: "xxx-xxx-xxx"
      responses:
        "201":
          description: "成功"

